buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails:grails-docs:${project.ext.properties.grailsDocsVersion ?: grailsVersion}"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath "io.github.gradle-nexus:publish-plugin:1.2.0"
        classpath 'io.github.groovylang.groovydoc:groovydoc-gradle-plugin:1.0.1'
    }
}

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

version project.projectVersion

ext {
    commonBuild = 'https://raw.githubusercontent.com/grails/grails-common-build/1.0.x'
}

apply plugin: 'idea'

subprojects {

    version project.projectVersion

    ext {
        userOrg = "grails"
        isGrailsPlugin = name.startsWith('grails-plugin')
        isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")
    }

    if (isGrailsPlugin) {
        group "org.grails.plugins"
    } else {
        group "org.grails"
    }
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    if (it.name.startsWith("examples")) {
        apply plugin: "org.grails.grails-web"
    } else if (isGrailsPlugin) {
        apply plugin: "org.grails.grails-plugin"
    } else {
        apply from: "${commonBuild}/common-project.gradle"

        dependencies {
            documentation "org.codehaus.groovy:groovy-dateutil:$groovyVersion"
        }
    }

    apply plugin: 'idea'
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"

    dependencies {
        compileOnly "javax.servlet:javax.servlet-api:$servletApiVersion"

        testCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
        testCompile "org.codehaus.groovy:groovy-test:$groovyVersion"
    }

    tasks.withType(Test) {
        testLogging {
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
}

apply from: "${commonBuild}/common-docs.gradle"
apply from: "${commonBuild}/common-publishing.gradle"
